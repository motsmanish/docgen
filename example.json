{
	"info": {
		"_postman_id": "5dc9ecfe-c08a-06c3-26ff-11921363f0e7",
		"name": "SMS",
		"description": "Full `Rest API` collection and documentation of *School management system*",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Teacher",
			"item": [
				{
					"name": "v2",
					"item": [
						{
							"name": "Fetch teachers",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/v2/teachers?q=john&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"teachers"
									],
									"query": [
										{
											"key": "q",
											"value": "john",
											"description": "q can be name, email, phone etc"
										},
										{
											"key": "page",
											"value": "1",
											"description": "page as interger number"
										}
									]
								},
								"description": "Get list of teachers"
							},
							"response": []
						}
					],
					"description": "***V2*** contains the version 2 API collections",
					"_postman_isSubFolder": true
				},
				{
					"name": "Fetch teachers",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/teachers?q=john&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teachers"
							],
							"query": [
								{
									"key": "q",
									"value": "john",
									"description": "q can be name, email, phone etc"
								},
								{
									"key": "page",
									"value": "1",
									"description": "page as interger number"
								}
							]
						},
						"description": "Get list of teachers"
					},
					"response": []
				},
				{
					"name": "Create teacher",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"description": "`access_token` must be a valid *oAuth2* access token. You can also use ~~custom token~~ but it will be removed from next version"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "John Doe",
									"description": "`name` field must be between *3 to 20* chars",
									"type": "text"
								},
								{
									"key": "age",
									"value": "33",
									"description": "`age` field must be a valid numeric value",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/teachers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teachers"
							]
						}
					},
					"response": [
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"description": "`access_token` must be a valid *oAuth2* access token. You can also use ~~custom token~~ but it will be removed from next version"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "John Doe",
											"description": "`name` field must be between *3 to 20* chars",
											"type": "text"
										},
										{
											"key": "age",
											"value": "33",
											"description": "`age` field must be a valid numeric value",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/teachers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"teachers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        \"Name field is required\",\n        \"age field is required\"\n    ],\n    \"code\": 42201\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"description": "`access_token` must be a valid *oAuth2* access token. You can also use ~~custom token~~ but it will be removed from next version"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "John Doe",
											"description": "`name` field must be between *3 to 20* chars",
											"type": "text"
										},
										{
											"key": "age",
											"value": "33",
											"description": "`age` field must be a valid numeric value",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/teachers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"teachers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"message\": \"Teacher created successfully\",\n\t\"teacher_id\": 1002\n}"
						}
					]
				},
				{
					"name": "Update teacher",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "John Doe",
									"type": "text"
								},
								{
									"key": "age",
									"value": "33",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/teachers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teachers"
							]
						},
						"description": "update a teacher using api"
					},
					"response": []
				},
				{
					"name": "Update teacher partially",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "John Doe",
									"type": "text"
								},
								{
									"key": "age",
									"value": "33",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/teachers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teachers"
							]
						},
						"description": "This api need header for update teacher"
					},
					"response": []
				},
				{
					"name": "Remove teacher",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{base_url}}/teachers/{{id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"teachers",
								"{{id}}"
							]
						},
						"description": "update a teacher using api"
					},
					"response": []
				}
			],
			"description": "Teacher contains teacher's api collection"
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "Fetch students",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Must provide valid `access_token`",
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/students?page=1&limit=20",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"students"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "page number must be number (`int`)"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "list limit must be a number (`int`)"
								}
							]
						},
						"description": "Fetch list of all students"
					},
					"response": []
				}
			],
			"description": "Contains Students `API` collection",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "adde6005-f3a0-4111-99a0-16a76ce7ef0b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f73446b-e6ab-47b0-a7d9-85578e63c4df",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Github API",
			"item": [
				{
					"name": "Fetch profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{access_token}}",
								"description": "Valid `access_token`",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.github.com/users/thedevsaddam",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"users",
								"thedevsaddam"
							]
						},
						"description": "Get ***github*** profile information"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.github.com/users/thedevsaddam",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"users",
										"thedevsaddam"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 26 Jan 2019 06:58:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Server",
									"value": "GitHub.com"
								},
								{
									"key": "Status",
									"value": "200 OK"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1548489496"
								},
								{
									"key": "Cache-Control",
									"value": "public, max-age=60, s-maxage=60"
								},
								{
									"key": "Vary",
									"value": "Accept"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "ETag",
									"value": "W/\"687de6a641d08823ae08f4adeee22500\""
								},
								{
									"key": "Last-Modified",
									"value": "Fri, 25 Jan 2019 16:17:23 GMT"
								},
								{
									"key": "X-GitHub-Media-Type",
									"value": "github.v3; format=json"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "X-Frame-Options",
									"value": "deny"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin-when-cross-origin, strict-origin-when-cross-origin"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "X-GitHub-Request-Id",
									"value": "C57B:71A1:1E394FA:2266C38:5C4C0507"
								}
							],
							"cookie": [],
							"body": "{\n    \"login\": \"thedevsaddam\",\n    \"id\": 9676798,\n    \"node_id\": \"MDQ6VXNlcjk2NzY3OTg=\",\n    \"avatar_url\": \"https://avatars0.githubusercontent.com/u/9676798?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/thedevsaddam\",\n    \"html_url\": \"https://github.com/thedevsaddam\",\n    \"followers_url\": \"https://api.github.com/users/thedevsaddam/followers\",\n    \"following_url\": \"https://api.github.com/users/thedevsaddam/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/thedevsaddam/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/thedevsaddam/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/thedevsaddam/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/thedevsaddam/orgs\",\n    \"repos_url\": \"https://api.github.com/users/thedevsaddam/repos\",\n    \"events_url\": \"https://api.github.com/users/thedevsaddam/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/thedevsaddam/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false,\n    \"name\": \"Saddam H\",\n    \"company\": \"Pathao Inc.\",\n    \"blog\": \"https://thedevsaddam.github.io/\",\n    \"location\": \"Dhaka, Bangladesh\",\n    \"email\": null,\n    \"hireable\": true,\n    \"bio\": \"Software Engineer | Open Source Enthusiast | Love to write elegant code | Golang | Postgres | MongoDB | Elasticsearch / sleepy head, silent guy ;)\",\n    \"public_repos\": 78,\n    \"public_gists\": 38,\n    \"followers\": 197,\n    \"following\": 184,\n    \"created_at\": \"2014-11-11T14:07:13Z\",\n    \"updated_at\": \"2019-01-25T16:17:23Z\"\n}"
						}
					]
				},
				{
					"name": "create profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "`content-type` must be `application/json` or `application/text`"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"description": "Provide `access_token`"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"John Doe\",\n\t\"age\": 30,\n\t\"is_bangladeshi\": true\n}"
						},
						"url": {
							"raw": "https://api.github.com/users/thedevsaddam",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"users",
								"thedevsaddam"
							]
						},
						"description": "To create a new profile for user you must provide `Authorization` header with *valid* `access_token`."
					},
					"response": [
						{
							"name": "succes",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"John Doe\",\n\t\"age\": 30,\n\t\"is_bangladeshi\": true\n}"
								},
								"url": {
									"raw": "https://api.github.com/users/thedevsaddam",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"users",
										"thedevsaddam"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*",
									"name": "Access-Control-Allow-Origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Cache-Control",
									"value": "public, max-age=60, s-maxage=60",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'",
									"name": "Content-Security-Policy",
									"description": "Custom header"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Dec 2017 14:57:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"4969f6a4b62918dafae715f1e9b4223c\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Last-Modified",
									"value": "Mon, 18 Dec 2017 05:25:18 GMT",
									"name": "Last-Modified",
									"description": "The last modified date for the requested object, in RFC 2822 format"
								},
								{
									"key": "Server",
									"value": "GitHub.com",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Status",
									"value": "200 OK",
									"name": "Status",
									"description": "Custom header"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Accept",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-Frame-Options",
									"value": "deny",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-GitHub-Media-Type",
									"value": "github.v3; format=json",
									"name": "X-GitHub-Media-Type",
									"description": "Custom header"
								},
								{
									"key": "X-GitHub-Request-Id",
									"value": "C11E:23FF:10343AB:14DD211:5A37D753",
									"name": "X-GitHub-Request-Id",
									"description": "Custom header"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60",
									"name": "X-RateLimit-Limit",
									"description": "Custom header"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58",
									"name": "X-RateLimit-Remaining",
									"description": "Custom header"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1513612605",
									"name": "X-RateLimit-Reset",
									"description": "Custom header"
								},
								{
									"key": "X-Runtime-rack",
									"value": "0.025357",
									"name": "X-Runtime-rack",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\n    \"login\": \"thedevsaddam\",\n    \"avatar_url\": \"https://avatars0.githubusercontent.com/u/9676798?v=4\",\n    \"url\": \"https://api.github.com/users/thedevsaddam\",\n    \"html_url\": \"https://github.com/thedevsaddam\",\n    \"followers_url\": \"https://api.github.com/users/thedevsaddam/followers\",\n    \"following_url\": \"https://api.github.com/users/thedevsaddam/following{/other_user}\",\n    \"created_at\": \"2014-11-11T14:07:13Z\",\n    \"updated_at\": \"2017-12-18T05:25:18Z\"\n}"
						}
					]
				}
			],
			"description": "Contains github ***API*** collection",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "90f126c6-e309-4e86-b216-5dd42ac3dd50",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3eb7048a-3ebd-4055-9e3a-7e2bafcb8423",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "user",
							"description": "username email/phone",
							"type": "text"
						},
						{
							"key": "password",
							"value": "pass",
							"description": "pass must be greater than `5` chars",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Inorder to access the private ***API*** you must get an access token by providing `username/password`"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bbd0020c-2e8f-4cbf-9326-4142e145e34c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4ef7d535-71e6-4278-acc6-82723a341daa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}